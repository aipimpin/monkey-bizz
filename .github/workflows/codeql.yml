# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
# .github/workflows/codeql.yml
permissions:
  actions: read
  contents: read
  security-events: write
 security-events: write
- uses: github/codeql-action/init@v3
- uses: github/codeql-action/analyze@v3
  - if: matrix.build-mode == 'manual'
  run: |
    # Add your build commands here
    make bootstrap
    make releaseon:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]
  schedule:
    - cron: '32 0 * * 4'
      - name: "Checkout code"
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          persist-credentials: false

      - name: "Run analysis"
        uses: ossf/scorecard-action@e38b1902ae4f44df626f11ba0734b14fb91f8f86 # v2.1.2
        with:
          results_file: results.sarif
          results_format: sarif
          # (Optional) "write" PAT token. Uncomment the `repo_token` line below if
          # you want to enable the Branch-Protection check on a *public* repository
          # To create the PAT, follow the steps in https://github.com/ossf/scorecard-action#authentication-with-pat.
          # repo_token: ${{ secrets.SCORECARD_TOKEN }}

          # Public repositories:
          #   - Publish results to OpenSSF REST API for easy access by consumers
          #   - Allows the repository to include the Scorecard badge.
          #   - See https://github.com/ossf/scorecard-action#publishing-results.
          publish_results: true

      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@17573ee1cc1b9d061760f3a006fc4aac4f944fd5 # v2.2.4
        with:
          sarif_file: results.sarif



# Declare default permissions as read only.
permissions: read-all

jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needed to publish results (see publish_results below).
      id-token: write

    steps:
      - name: "Checkout code"
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          persist-credentials: false

      - name: "Run analysis"
        uses: ossf/scorecard-action@e38b1902ae4f44df626f11ba0734b14fb91f8f86 # v2.1.2
        with:
          results_file: results.sarif
          results_format: sarif
          # (Optional) "write" PAT token. Uncomment the `repo_token` line below if
          # you want to enable the Branch-Protection check on a *public* repository
          # To create the PAT, follow the steps in https://github.com/ossf/scorecard-action#authentication-with-pat.
          # repo_token: ${{ secrets.SCORECARD_TOKEN }}

          # Public repositories:
          #   - Publish results to OpenSSF REST API for easy access by consumers
          #   - Allows the repository to include the Scorecard badge.
          #   - See https://github.com/ossf/scorecard-action#publishing-results.
          publish_results: true

      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@17573ee1cc1b9d061760f3a006fc4aac4f944fd5 # v2.2.4
        with:
          sarif_file: results.sarif
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

   1| # For most projects, this workflow file will not need changing; you simply need
2| # to commit it to your repository.
3| #
4| # You may wish to alter this file to override the set of languages analyzed,
5| # or to provide custom queries or build logic.
6| #
7| # ******** NOTE ********
8| # We have attempted to detect the languages in your repository. Please check
9| # the `language` matrix defined below to confirm you have the correct set of
10| # supported CodeQL languages.
11| #
12| name: "CodeQL Advanced"
13| 
14| on:
15|   push:
16|     branches: [ "main" ]
17|   pull_request:
18|     branches: [ "main" ]
19|   schedule:
20|     - cron: '32 0 * * 4'
21| 
22| jobs:
23|   analyze:
24|     name: Analyze (${{ matrix.language }})
25|     # Runner size impacts CodeQL analysis time. To learn more, please see:
26|     #   - https://gh.io/recommended-hardware-resources-for-running-codeql
27|     #   - https://gh.io/supported-runners-and-hardware-resources
28|     #   - https://gh.io/using-larger-runners (GitHub.com only)
29|     # Consider using larger runners or machines with greater resources for possible analysis time improvements.
30|     runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
31|     permissions:
32|       # required for all workflows
33|       security-events: write
34| 
35|       # required to fetch internal or private CodeQL packs
36|       packages: read
37| 
38|       # only required for workflows in private repositories
39|       actions: read
40|       contents: read
41| 
42|     strategy:
43|       fail-fast: false
44|       matrix:
45|         language: ['javascript', 'python'] # Add the languages used in your project here
46|         # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
47|         # Use `c-cpp` to analyze code written in C, C++ or both
48|         # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
49|         # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
50|         # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
51|         # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
52|         # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
53|         # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
54|     steps:
55|     - name: Checkout repository
56|       uses: actions/checkout@v4
57| 
58|     # Initializes the CodeQL tools for scanning.
59|     - name: Initialize CodeQL
60|       uses: github/codeql-action/init@v3
61|       with:
62|         languages: ${{ matrix.language }}
63|         build-mode: ${{ matrix.build-mode }}
64|         # If you wish to specify custom queries, you can do so here or in a config file.
65|         # By default, queries listed here will override any specified in a config file.
66|         # Prefix the list here with "+" to use these queries and those in the config file.
67| 
68|         # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-cod[...]
69|         # queries: security-extended,security-and-quality
70| 
71|     # If the analyze step fails for one of the languages you are analyzing with
72|     # "We were unable to automatically build your code", modify the matrix above
73|     # to set the build mode to "manual" for that language. Then modify this step
74|     # to build your code.
75|     # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
76|     # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
77|     - if: matrix.build-mode == 'manual'
78|       shell: bash
79|       run: |
80|         echo 'If you are using a "manual" build mode for one or more of the' \
81|           'languages you are analyzing, replace this with the commands to build' \
82|           'your code, for example:'
83|         echo '  make bootstrap'
84|         echo '  make release'
85|         exit 1
86| 
87|     - name: Perform CodeQL Analysis
88|       uses: github/codeql-action/analyze@v3
89|       with:
90|         category: "/language:${{matrix.language}}"
91| 
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # If the analyze step fails for one of the languages you are analyzing with
    # "We were unable to automatically build your code", modify the matrix above
    # to set the build mode to "manual" for that language. Then modify this step
    # to build your code.
    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
